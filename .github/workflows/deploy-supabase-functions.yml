name: Deploy Supabase Functions

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  deploy-functions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install jq and unzip
        run: sudo apt-get update && sudo apt-get install -y jq unzip

      - name: Download and install Supabase CLI
        run: |
          echo "Querying GitHub for latest supabase/cli release"
          api="https://api.github.com/repos/supabase/cli/releases/latest"
          asset_url=$(curl -s $api | jq -r '.assets[] | select(.name | test("linux-amd64.tar.gz")) | .browser_download_url')
          if [ -z "$asset_url" ]; then echo "Could not find linux-amd64 release asset"; exit 1; fi
          echo "Downloading $asset_url"
          curl -L -o supabase.tar.gz "$asset_url"
          tar -xzf supabase.tar.gz
          sudo mv supabase /usr/local/bin/supabase
          sudo chmod +x /usr/local/bin/supabase
          supabase --version

      - name: Deploy Supabase Edge Functions
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
        run: |
          if [ -z "$SUPABASE_ACCESS_TOKEN" ] || [ -z "$SUPABASE_PROJECT_REF" ]; then
            echo "Required secrets SUPABASE_ACCESS_TOKEN and SUPABASE_PROJECT_REF are not set"; exit 1
          fi
          # Deploy each function directory under supabase/functions (skip _shared)
          cd supabase/functions
          for d in */ ; do
            name="${d%/}"
            if [ "$name" = "_shared" ]; then
              echo "Skipping _shared"
              continue
            fi
            echo "Deploying function: $name"
            supabase functions deploy "$name" --project-ref "$SUPABASE_PROJECT_REF" --no-verify || exit 1
          done
