# Copy this file to .env and fill in values.
# Note: Expo client-side env vars must be prefixed with EXPO_PUBLIC_.
# For secrets (API keys), prefer routing through a backend proxy instead of exposing directly in the client.

# === Supabase (client-safe) ===
EXPO_PUBLIC_SUPABASE_URL=
EXPO_PUBLIC_SUPABASE_ANON_KEY=
EXPO_PUBLIC_SUPABASE_REDIRECT_URL=nosh://auth/callback
EXPO_PUBLIC_DEV_BYPASS_AUTH=false
EXPO_PUBLIC_SUPABASE_IMAGES_BUCKET=recipe-images

# === AI Configuration ===
EXPO_PUBLIC_AI_PROVIDER=openrouter
EXPO_PUBLIC_AI_API_BASE=https://openrouter.ai/api/v1
EXPO_PUBLIC_AI_MODEL=openai/gpt-oss-20b:free
# Vision model for image extraction (OpenRouter)
EXPO_PUBLIC_AI_VISION_MODEL=qwen/qwen2.5-vl-72b-instruct:free
# Avoid putting raw keys in the client app. If you must during prototyping, use:
# EXPO_PUBLIC_AI_API_KEY=your_openrouter_key # DO NOT commit real keys (remove for production; use Edge Function secrets)

# Optional server proxy (recommended)
EXPO_PUBLIC_AI_PROXY_BASE=https://your-backend.example.com/ai  # Your backend endpoint that signs/forwards requests

# === AI Nutrition Scan (Food-101-93M) ===
# Hugging Face API for Food-101-93M classifier (used in Supabase Edge Function)
# NOTE: This should be set as a Supabase Edge Function secret, not in client .env
# HUGGINGFACE_API_KEY=hf_xxxxxxxxxxxxxxxxxxxxx
# FOOD_CLASSIFIER_URL=https://api-inference.huggingface.co/models/prithivMLmods/Food-101-93M

# USDA FoodData Central API (optional - for nutrition data enrichment)
# Get free API key at: https://fdc.nal.usda.gov/api-key-signup.html
# NOTE: This should be set as a Supabase Edge Function secret
# USDA_API_KEY=your_usda_api_key

# === Speech-to-Text (optional) ===
# Recommended: Proxy mode â€” point to your Supabase Edge Function and leave KEY empty.
# Direct-to-provider is not recommended for production (keys exposed in client).
EXPO_PUBLIC_STT_API_BASE=
EXPO_PUBLIC_STT_API_KEY=

# === Recipe Providers ===
## TheMealDB (free API; safe for client usage while prototyping)
# Default API key '1' is public and works without signup
EXPO_PUBLIC_MEALDB_API_KEY=1
# Optional: If you set up a proxy (recommended for production), point to it here.
# The provider will call `${EXPO_PUBLIC_RECIPES_PROXY_BASE}/themealdb/<key>/...`
EXPO_PUBLIC_RECIPES_PROXY_BASE=

## FatSecret API (server-side OAuth2; do NOT expose secret in the app)
# These are for your backend/token broker only. The mobile app should request a short-lived access token from your server.
# FATSECRET_CLIENT_ID=
# FATSECRET_CLIENT_SECRET=
# Optional: Token broker URL your app will call to obtain an access token
# EXPO_PUBLIC_FATSECRET_TOKEN_URL=

# === Firebase / AWS (choose what you use) ===
EXPO_PUBLIC_FIREBASE_API_KEY=
EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN=
EXPO_PUBLIC_FIREBASE_PROJECT_ID=
EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET=
EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=
EXPO_PUBLIC_FIREBASE_APP_ID=

EXPO_PUBLIC_AWS_REGION=
EXPO_PUBLIC_AWS_USER_POOL_ID=
EXPO_PUBLIC_AWS_USER_POOL_WEB_CLIENT_ID=
EXPO_PUBLIC_AWS_IDENTITY_POOL_ID=

# === Feature Flags ===
EXPO_PUBLIC_ENABLE_AI_PICKS=true
EXPO_PUBLIC_ENABLE_NUTRITION_DASHBOARD=true
EXPO_PUBLIC_OFFLINE_ONLY=false
EXPO_PUBLIC_DEV_RESET_ONBOARDING=false
